generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccessType {
  READ
  WRITE
  UPDATE
  DELETE
}

enum IngestionStatus {
  PENDING
  SUCCESS
  FAILED
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  rolePermissions RolePermission[]
  users           User[]

  @@map("roles")
}

model Permission {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  rolePermissions RolePermission[]

  @@map("permissions")
}

model RolePermission {
  id           String     @id @default(uuid())
  roleId       String
  permissionId String
  accessType   AccessType

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@map("role_permissions")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String  @map("first_name") @db.VarChar(255)
  lastName  String? @map("last_name") @db.VarChar(255)
  password  String? @db.VarChar(255)
  roleId    String  @map("role_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  role Role @relation(fields: [roleId], references: [id])
  ingestions Ingestion[]

  @@map("users")
}

model Document {
  id       String @id @default(uuid())
  name     String @db.VarChar(255)
  mimeType String @map("mime_type") @db.VarChar(255)
  size     Float?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  ingestions Ingestion[]

  @@map("documents")
}

model Ingestion {
  id          String @id @default(uuid())
  documentId  String @map("document_id")
  userId      String @map("user_id")
  status      IngestionStatus @default(PENDING)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  document Document @relation(fields: [documentId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@map("ingestions")
}